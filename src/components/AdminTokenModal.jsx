import React, { useState } from 'react';
import { tokenManager } from '../utils/api';
import '../styles/AdminTokenModal.scss';

const AdminTokenModal = ({ isOpen, onClose }) => {
  const [step, setStep] = useState('password'); // 'password' or 'token'
  const [password, setPassword] = useState('');
  const [newToken, setNewToken] = useState('');
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');

  // –°–µ–∫—Ä–µ—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
  const ADMIN_PASSWORD = 'wanderadmin2025';

  const handlePasswordSubmit = (e) => {
    e.preventDefault();
    if (password === ADMIN_PASSWORD) {
      setStep('token');
      setError('');
    } else {
      setError('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
      setPassword('');
    }
  };

  const handleTokenSubmit = async (e) => {
    e.preventDefault();
    if (!newToken.trim()) {
      setError('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω');
      return;
    }

    try {
      setError('');
      setSuccess('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...');
      
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
      const result = await tokenManager.updateServerToken(newToken.trim(), ADMIN_PASSWORD);
      
      if (result.success) {
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        const instructions = tokenManager.getUpdateInstructions(newToken.trim());
        
        setSuccess(`‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã! 

üìã –®–∞–≥–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:
${instructions.instructions.join('\n')}

üìÑ –ù–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ strapi-config.json:

${instructions.content}`);
        setNewToken('');
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–µ—à —Ç–æ–∫–µ–Ω–∞
        tokenManager.invalidateCache();
        
        // –ù–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
      } else {
        setError(`‚ùå –û—à–∏–±–∫–∞: ${result.error}`);
      }
    } catch (err) {
      setError('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π: ' + err.message);
    }
  };

  const handleClose = () => {
    setStep('password');
    setPassword('');
    setNewToken('');
    setError('');
    setSuccess('');
    onClose();
  };

  if (!isOpen) return null;

  return (
    <div className="admin-token-modal-overlay" onClick={handleClose}>
      <div className="admin-token-modal" onClick={(e) => e.stopPropagation()}>
        <div className="admin-token-header">
          <h2>üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h2>
          <button className="admin-token-close" onClick={handleClose}>√ó</button>
        </div>

        <div className="admin-token-content">
          {step === 'password' ? (
            <form onSubmit={handlePasswordSubmit}>
              <div className="admin-token-field">
                <label>–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</label>
                <input
                  type="password"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  placeholder="–ü–∞—Ä–æ–ª—å..."
                  autoFocus
                />
              </div>
              {error && <div className="admin-token-error">{error}</div>}
              <button type="submit" className="admin-token-button">
                –í–æ–π—Ç–∏
              </button>
            </form>
          ) : (
            <form onSubmit={handleTokenSubmit}>
              <div className="admin-token-field">
                <label>–ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω Strapi API:</label>
                <textarea
                  value={newToken}
                  onChange={(e) => setNewToken(e.target.value)}
                  placeholder="–í—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å..."
                  rows={4}
                  autoFocus
                />
              </div>
              {error && <div className="admin-token-error">{error}</div>}
              {success && <div className="admin-token-success">{success}</div>}
              <div className="admin-token-buttons">
                <button type="button" onClick={() => setStep('password')} className="admin-token-button-secondary">
                  –ù–∞–∑–∞–¥
                </button>
                <button type="submit" className="admin-token-button">
                  –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
                </button>
              </div>
            </form>
          )}
        </div>

        <div className="admin-token-info">
          <small>
            üåê <strong>–ì–ª–æ–±–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</strong> –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –±—É–¥–µ—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.<br/>
            üìÅ <strong>–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:</strong> /public/strapi-config.json<br/>
            ‚è±Ô∏è <strong>–í—Ä–µ–º—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:</strong> 1 –º–∏–Ω—É—Ç–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          </small>
        </div>
      </div>
    </div>
  );
};

export default AdminTokenModal;
