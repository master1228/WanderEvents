import { useEffect } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';
import { useTranslation } from 'react-i18next';
import { useLanguage } from '../context/LanguageContext';

const LanguageRoute = ({ children, language }) => {
  const { i18n } = useTranslation();
  const { setLocale } = useLanguage();
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userChoice = localStorage.getItem('userLanguageChoice');
    
    if (userChoice) {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —è–∑—ã–∫ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –≤—ã–±–æ—Ä, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º URL
      console.log('üéØ LanguageRoute: –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userChoice);
      if (i18n.language !== userChoice) {
        i18n.changeLanguage(userChoice);
        setLocale(userChoice);
      }
    } else {
      // –ï—Å–ª–∏ –≤—ã–±–æ—Ä–∞ –Ω–µ—Ç - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Ä—à—Ä—É—Ç–∞
      console.log('üåê LanguageRoute: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ URL:', language);
      if (language && i18n.language !== language) {
        i18n.changeLanguage(language);
        setLocale(language);
      }
    }
  }, [language, i18n, setLocale]);

  useEffect(() => {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è SEO
    const path = location.pathname;
    
    // –†–µ–¥–∏—Ä–µ–∫—Ç /ru/ –Ω–∞ –∫–æ—Ä–Ω–µ–≤–æ–π / (—Ä—É—Å—Å–∫–∏–π —ç—Ç–æ x-default)
    if (path === '/ru' || path === '/ru/') {
      navigate('/', { replace: true });
      return;
    }

    // –†–µ–¥–∏—Ä–µ–∫—Ç —Å trailing slash –¥–ª—è —è–∑—ã–∫–æ–≤—ã—Ö –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤
    if (path === '/en' || path === '/pl') {
      navigate(path + '/', { replace: true });
      return;
    }

    // –†–µ–¥–∏—Ä–µ–∫—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—É—Ç–µ–π —Ç–∏–ø–∞ /ru/welcome –Ω–∞ /welcome
    if (path.startsWith('/ru/')) {
      const newPath = path.replace('/ru/', '/');
      navigate(newPath, { replace: true });
      return;
    }
  }, [location.pathname, navigate]);

  return children;
};

export default LanguageRoute;
