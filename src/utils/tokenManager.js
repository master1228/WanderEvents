// –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏ Strapi —á–µ—Ä–µ–∑ JSON —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
class TokenManager {
  constructor() {
    this.currentToken = null;
    this.fallbackToken = '74193af581cd8b690a89bcb2d23ec6317244249d69232ff0626568f1cce28be6af1849b3ed640a2cff31bcaea7bbd0fa68a2dfa84ed8bdd6a2e774ac311919bf90a7c29db8bece3d8234cc59a5554fca5c5fece724cf45ee73aa4dced888c5decde2f8fff2b3f2cd87d3ed0f51645550f88d1258ea5919e7de182e885fa3a738';
    
    // JSON —Ñ–∞–π–ª –Ω–∞ —Ç–æ–º –∂–µ —Å–µ—Ä–≤–µ—Ä–µ, –≥–¥–µ —Ä–∞–∑–º–µ—â–µ–Ω —Å–∞–π—Ç
    this.tokenConfigUrl = '/strapi-config.json';
    this.adminPassword = 'wanderadmin2025';
    
    this.lastFetch = 0;
    this.cacheDuration = 1 * 60 * 1000; // 1 –º–∏–Ω—É—Ç–∞ –∫–µ—à (–±—ã—Å—Ç—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–∑ JSON —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  async fetchCurrentToken() {
    const now = Date.now();
    
    // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω —Å–≤–µ–∂–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
    if (this.currentToken && (now - this.lastFetch) < this.cacheDuration) {
      return this.currentToken;
    }

    try {
      console.log('üîÑ Fetching current Strapi token from server config...');
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ JSON —Ñ–∞–π–ª–∞ –Ω–∞ —Ç–æ–º –∂–µ —Å–µ—Ä–≤–µ—Ä–µ
      const response = await fetch(this.tokenConfigUrl, {
        method: 'GET',
        headers: {
          'Cache-Control': 'no-cache'
        },
        timeout: 5000
      });

      if (response.ok) {
        const data = await response.json();
        if (data.token && data.token.trim()) {
          this.currentToken = data.token.trim();
          this.lastFetch = now;
          console.log('‚úÖ Successfully fetched current token from server config');
          return this.currentToken;
        }
      }
    } catch (error) {
      console.warn('‚ö†Ô∏è Failed to fetch token from server config:', error.message);
    }

    // Fallback: –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω
    console.log('üîÑ Using fallback hardcoded token');
    return this.fallbackToken;
  }

  // –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ JSON —Ñ–∞–π–ª–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (—á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å)
  async updateServerToken(newToken, adminPassword) {
    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
    if (adminPassword !== this.adminPassword) {
      return { success: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' };
    }

    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
      const configData = {
        token: newToken.trim(),
        lastUpdated: new Date().toISOString(),
        updatedBy: 'admin-panel'
      };
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ –ø–∞–º—è—Ç–∏ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
      this.currentToken = newToken.trim();
      this.lastFetch = Date.now();
      
      console.log('‚úÖ Token prepared for server update.');
      
      return { 
        success: true,
        message: '–î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –æ–±–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª /public/strapi-config.json –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.'
      };
      
    } catch (error) {
      console.error('‚ùå Error updating token:', error);
      return { 
        success: false, 
        error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: ' + error.message 
      };
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
  getUpdateInstructions(newToken) {
    const configData = {
      token: newToken.trim(),
      lastUpdated: new Date().toISOString(),
      updatedBy: 'admin-panel'
    };
    
    return {
      filename: 'strapi-config.json',
      path: '/public/strapi-config.json',
      content: JSON.stringify(configData, null, 2),
      instructions: [
        '1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ JSON —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–∏–∂–µ',
        '2. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª /public/strapi-config.json –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ',
        '3. –ó–∞–º–µ–Ω–∏—Ç–µ –≤—Å—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ',
        '4. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª',
        '5. –ù–æ–≤—ã–π —Ç–æ–∫–µ–Ω –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã'
      ]
    };
  }

  // –°–±—Ä–æ—Å–∏—Ç—å –∫–µ—à —Ç–æ–∫–µ–Ω–∞
  invalidateCache() {
    this.currentToken = null;
    this.lastFetch = 0;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
export const tokenManager = new TokenManager();
export default tokenManager;
